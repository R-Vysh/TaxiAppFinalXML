<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
             http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
             http://www.springframework.org/schema/security
             http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <!-- Security configuration for REST services. -->

    <http pattern="/" security="none"/>
    <http pattern="/customers/register" security="none"/>

    <http pattern="/**"
          authentication-manager-ref="authenticationManager" entry-point-ref="restServicesEntryPoint"
          create-session="stateless">
        <custom-filter ref="restServicesFilter"
                       before="PRE_AUTH_FILTER" />
    </http>

    <!-- Entry point for REST service. -->
    <beans:bean id="restServicesEntryPoint"
          class="ua.ros.taxiapp.web.security.RestAuthenticationEntryPoint" />

    <!-- Filter for REST services. -->
    <beans:bean id="restServicesFilter"
          class="ua.ros.taxiapp.web.security.RestUsernamePasswordAuthenticationFilter">
        <beans:property name="postOnly" value="false" />
        <beans:property name="authenticationManager" ref="authenticationManager" />
        <beans:property name="authenticationSuccessHandler" ref="restServicesSuccessHandler" />
    </beans:bean>

    <!-- A handler for successful REST service authentication. -->
    <beans:bean id="restServicesSuccessHandler"
          class="ua.ros.taxiapp.web.security.RestAuthenticationSuccessHandler" />

    <!-- Authentication manager. -->
    <authentication-manager alias="authenticationManager">
        <authentication-provider>
            <jdbc-user-service data-source-ref="dataSource"
                               users-by-username-query="select username, password, 'true' as enabled
                               from users where username = ?"
                               authorities-by-username-query="select users.username , authorities.authority as authorities
                               from users,authorities
                               where users.username = ? AND users.username=authorities.username "/>
        </authentication-provider>
    </authentication-manager>

    <global-method-security
            secured-annotations="enabled" jsr250-annotations="enabled"
            pre-post-annotations="enabled">
    </global-method-security>
</beans:beans>